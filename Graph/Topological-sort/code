class Solution
{
    //Function to return list containing vertices in Topological order. 
    static int[] topoSort(int V, ArrayList<ArrayList<Integer>> adj) 
    {
        // add your code here
        Stack<Integer> stack = new Stack<>();
        boolean vis[] = new boolean[V];
        for(int i = 0 ; i < V ; i ++) {
            if(!vis[i]) {
                toposort(i , adj , stack , vis);
            }
        }
        System.out.println(stack);
        int ans[] = new int[stack.size()];
        int ptr = 0;
        while(!stack.isEmpty()) {
            ans[ptr ++] = stack.pop();
        }
        return ans;
    }
    static void toposort(int node , ArrayList<ArrayList<Integer>> adj , Stack<Integer> stack , boolean vis[]){
        vis[node] = true;
        for(int i : adj.get(node)) {
            if(!vis[i]) {
                toposort(i , adj , stack , vis);
            }
        }
        stack.add(node);
    }
}
